<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "mybatis-3-mapper.dtd" >
<mapper namespace="budgetMapper">
	<resultMap type="Bcate" id="bcateResult">
		<result column="BCATE_NO" property="bcateNo" />
		<result column="BCATE_NAME" property="bcateName" />
		<result column="EMAIL" property="email" />
		<result column="COUPLE_CODE" property="coupleCode" />
	</resultMap>
	
	<resultMap type="Budget" id="budgetResult">
		<result column="BUDGET_NO" property="budgetNo" />
		<result column="BUDGET_DATE" property="budgetDate" />
		<result column="BUDGET_BRIEFS" property="budgetBriefs" />
		<result column="BUDGET_HOWMUCH" property="budgetHowMuch" />
		<result column="BUDGET_CURRENCY" property="budgetCurrency" />
		<result column="BUDGET_BALANCE" property="budgetBalance" />
		<result column="BUDGET_CATE" property="budgetCate" />
		<result column="BUDGET_METHOD" property="budgetMethod" />
		<result column="BUDGET_COMM" property="budgetComm" />
		<result column="BUDGET_INOUT" property="budgetInout" />
		<result column="EMAIL" property="email" />
		<result column="COUPLE_CODE" property="coupleCode" />
	</resultMap>
	
	<select id="countBudget" resultType="_int">
		select count(*) as count
		  from f_budget
		 where couple_code = #{ coupleCode }
	</select>
	
	<select id="selectBudget" resultMap="budgetResult">
		select BUDGET_NO
		     , to_char(BUDGET_DATE, 'yyyy-mm-dd') as "BUDGET_DATE"
		     , BUDGET_BRIEFS
		     , BUDGET_HOWMUCH
		     , BUDGET_CURRENCY
		     , BUDGET_BALANCE
		     , BUDGET_CATE
		     , BUDGET_METHOD
		     , BUDGET_COMM
		     , BUDGET_INOUT
		     , EMAIL
		     , COUPLE_CODE
		  from f_budget
		 where couple_code = #{ coupleCode }
         order
            by budget_date desc
             , budget_no desc
	</select>
	
	<select id="selectBudget_currency" resultMap="budgetResult">
		<![CDATA[
			select BUDGET_NO
			     , to_char(BUDGET_DATE, 'yyyy-mm-dd') as "BUDGET_DATE"
			     , BUDGET_BRIEFS
			     , BUDGET_HOWMUCH
			     , BUDGET_CURRENCY
			     , BUDGET_BALANCE
			     , BUDGET_CATE
			     , BUDGET_METHOD
			     , BUDGET_COMM
			     , BUDGET_INOUT
			     , EMAIL
			     , COUPLE_CODE
			  from f_budget
			 where couple_code = #{ coupleCode }
			   and budget_currency = #{ budgetCurrency }
			   and budget_date <= TO_DATE(#{ budgetDate }, 'YYYY-MM-DD')
	         order
	            by budget_date desc
	             , budget_no desc
	    ]]>
	</select>
	
	<insert id="insertBudgetI">
		INSERT
		  INTO F_BUDGET
		VALUES
		     (
		       SEQ_BUDGET_NO.NEXTVAL
		     , TO_DATE(#{ budgetDate }, 'YYYY-MM-DD')
		     , #{ budgetBriefs }
		     , #{ budgetHowMuch }
		     , #{ budgetCurrency }
		     , #{ budgetBalance }
		     , null
		     , null
		     , #{ budgetComm }
		     , #{ budgetInout }
		     , #{ email }
		     , #{ coupleCode }
		     )
	</insert>
	
	<insert id="insertBudgetO">
		INSERT
		  INTO F_BUDGET
		VALUES
		     (
		       SEQ_BUDGET_NO.NEXTVAL
		     , TO_DATE(#{ budgetDate }, 'YYYY-MM-DD')
		     , #{ budgetBriefs }
		     , #{ budgetHowMuch }
		     , #{ budgetCurrency }
		     , #{ budgetBalance }
		     , #{ budgetCate }
		     , #{ budgetMethod }
		     , #{ budgetComm }
		     , #{ budgetInout }
		     , #{ email }
		     , #{ coupleCode }
		     )
	</insert>
	
	<select id="selectBalanceOne" resultType="_int">
		<![CDATA[
			select budget_balance
			  from (select budget_balance
					  from f_budget
					 where couple_code = #{ coupleCode }
					   and budget_currency = #{ budgetCurrency }
					   and budget_date <= TO_DATE(#{ budgetDate }, 'YYYY-MM-DD')
					 order
					    by budget_date desc
					     , budget_no desc)
			 where rownum between 1 and 1
		]]>
	</select>
	
	<select id="countBalance" resultType="_int">
		select count(*) as count
		  from f_budget
		 where couple_code = #{ coupleCode }
		   and budget_date > to_date(#{ budgetDate }, 'yyyy-mm-dd')
		   and budget_currency = #{ budgetCurrency }
	</select>
	
	<select id="selectBudgetSpecific" resultMap="budgetResult">
		select BUDGET_NO
		     , to_char(BUDGET_DATE, 'yyyy-mm-dd') as "BUDGET_DATE"
		     , BUDGET_BRIEFS
		     , BUDGET_HOWMUCH
		     , BUDGET_CURRENCY
		     , BUDGET_BALANCE
		     , BUDGET_CATE
		     , BUDGET_METHOD
		     , BUDGET_COMM
		     , BUDGET_INOUT
		     , EMAIL
		     , COUPLE_CODE
		  from f_budget
		 where couple_code = #{ coupleCode }
           and budget_date > to_date(#{ budgetDate }, 'yyyy-mm-dd')
           and budget_currency = #{ budgetCurrency }
         order
            by budget_date
             , budget_no
	</select>
	
	<update id="updateBudget">
		update f_budget
		   set budget_balance = #{ budgetBalance }
		 where couple_code = #{ coupleCode }
		   and budget_no = #{ budgetNo }
		   and budget_currency = #{ budgetCurrency }
	</update>
</mapper>
