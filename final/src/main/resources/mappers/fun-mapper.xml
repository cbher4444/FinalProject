<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "mybatis-3-mapper.dtd" >
<mapper namespace="funMapper">
	<resultMap type="Qtest" id="qtestResult">
		<result column="QTEST_NO" property="qtestNo" />
		<result column="QTEST_CONTENT" property="qtestContent" />
		<result column="TEST_NO" property="testNo" />
		<result column="EMAIL" property="email" />
		<result column="COUPLE_CODE" property="coupleCode" />
	</resultMap>
	
	<resultMap type="OptionTest" id="optionTestResult">
		<result column="OPTION_NO" property="optionNo" />
		<result column="OPTION_CONTENT" property="optionContent" />
		<result column="OPTION_TRUE" property="optionTrue" />
		<result column="QTEST_NO" property="qtestNo" />
		<result column="TEST_NO" property="testNo" />
		<result column="EMAIL" property="email" />
		<result column="COUPLE_CODE" property="coupleCode" />
	</resultMap>
	
	<resultMap type="Qservey" id="qserveyResult">
		<result column="QSERVEY_NO" property="qserveyNo" />
		<result column="QSERVEY_CONTENT" property="qserveyContent" />
	</resultMap>
	
	<resultMap type="Aservey" id="aserveyResult">
		<result column="ASERVEY_NO" property="aserveyNo" />
		<result column="ASERVEY_CONTENT" property="aserveyContent" />
		<result column="QSERVEY_NO" property="qserveyNo" />
		<result column="EMAIL" property="email" />
		<result column="COUPLE_CODE" property="coupleCode" />
	</resultMap>
	
	<resultMap type="Qlove" id="qloveResult">
		<result column="QLOVE_NO" property="qloveNo" />
		<result column="QLOVE_CONTENT" property="qloveContent" />
		<result column="QLOVE_DATE" property="qloveDate" />
		<result column="EMAIL" property="email" />
		<result column="COUPLE_CODE" property="coupleCode" />
	</resultMap>
	
	<resultMap type="Alove" id="aloveResult">
		<result column="ALOVE_NO" property="aloveNo" />
		<result column="ALOVE_CONTENT" property="aloveContent" />
		<result column="QLOVE_NO" property="qloveNo" />
		<result column="EMAIL" property="email" />
		<result column="COUPLE_CODE" property="coupleCode" />
	</resultMap>
	
	<resultMap type="Test" id="testResult">
		<result column="TEST_NO" property="testNo" />
		<result column="TEST_SCORE" property="testScore" />
		<result column="TEST_DATE" property="testDate" />
		<result column="EMAIL" property="email" />
		<result column="COUPLE_CODE" property="coupleCode" />
	</resultMap>
	
	<resultMap type="Atest" id="atestResult">
		<result column="ATEST_NO" property="atestNo" />
		<result column="ATEST_CONTENT" property="atestContent" />
		<result column="ATEST_TRUE" property="atestTrue" />
		<result column="QTEST_NO" property="qtestNo" />
		<result column="TEST_NO" property="testNo" />
		<result column="EMAIL" property="email" />
		<result column="COUPLE_CODE" property="coupleCode" />
	</resultMap>
	
	<resultMap type="Qtoday" id="qtodayResult">
		<result column="QTODAY_NO" property="qtodayNo" />
		<result column="QTODAY_CONTENT" property="qtodayContent" />
	</resultMap>
	
	<resultMap type="Atoday" id="atodayResult">
		<result column="ATODAY_NO" property="atodayNo" />
		<result column="ATODAY_CONTENT" property="atodayContent" />
		<result column="ATODAY_DATE" property="atodayDate" />
		<result column="QTODAY_DATE" property="qtodayDate" />
		<result column="QTODAY_NO" property="qtodayNo" />
		<result column="EMAIL" property="email" />
		<result column="COUPLE_CODE" property="coupleCode" />
	</resultMap>
	
	<select id="selectQtest" resultMap="qtestResult">
		select qtest_no
		     , qtest_content
		     , test_no
		  from f_qtest
		 where test_no = (
		                    select test_no
		                      from (
		                            select test_no
		                              from f_test
		                             where email = #{ email }
		                               and couple_code = #{ coupleCode }
		                             order
		                                by test_date desc
		                            )
		                     where rownum = 1 
		                  )
	</select>
	
	<select id="selectOptionTest" resultMap="optionTestResult">
		select option_no
		     , option_content
		     , option_true
		     , qtest_no
		     , test_no
		  from f_option_test
		 where test_no = #{ testNo }
	</select>
	
	<select id="selectQservey" resultMap="qserveyResult">
		select qservey_no
			 , qservey_content
		  from f_qservey
	</select>
	
	<select id="selectAservey" resultMap="aserveyResult">
		select aservey_no
			 , aservey_content
			 , qservey_no
		  from f_aservey
		 where email = #{ email }
		   and couple_code = #{ coupleCode }
	</select>
	
	<insert id="insertQlove">
		INSERT
		  INTO F_QLOVE
		VALUES(
				SEQ_QLOVE_NO.NEXTVAL
			  , #{ qloveContent }
			  , SYSDATE
			  , #{ email }
			  , #{ coupleCode }
			  )
	</insert>
	
	<insert id="insertAlove">
		INSERT
		  INTO F_ALOVE
		VALUES(
				SEQ_ALOVE_NO.NEXTVAL
			  , #{ aloveContent }
			  , #{ qloveNo }
			  , #{ email }
			  , #{ coupleCode }
			  )
	</insert>
	
	<select id="selectQlove" resultMap="qloveResult">
		select qlove_no
		     , qlove_content
		     , qlove_date
		  from f_qlove
		 where email = #{ email }
		   and couple_code = #{ coupleCode }
		 order
		    by qlove_date
	</select>
	
	<select id="selectQloveOne" resultMap="qloveResult">
		select qlove_no
		     , qlove_content
		     , qlove_date
		     , rownum
		  from (
		         select qlove_no
		             , qlove_content
		             , qlove_date
		          from f_qlove
		         where email = #{ email }
		  		   and couple_code = #{ coupleCode }
		         order
		            by qlove_date desc
		  )
		 where rownum between 1 and 1
	</select>
	
	<select id="selectAlove" resultMap="aloveResult">
		select alove_no
		     , alove_content
		     , qlove_no
		  from f_alove
		 where email = #{ email }
		   and couple_code = #{ coupleCode }
		 order
		    by alove_no
	</select>
	
		<select id="selectTest" resultMap="testResult">
		select test_no
		     , test_score
		     , test_date
		     , email
		     , couple_code
		  from f_test
		 where email = #{ email }
		   and couple_code = #{ coupleCode }
		 order
		    by test_date
	</select>
	
	<select id="selectTestOne" resultMap="testResult">
		select test_no
		     , test_score
		     , test_date
		     , email
		     , couple_code
		  from (select test_no
		             , test_score
		             , test_date
		             , email
		             , couple_code
		          from f_test
		         where email = #{ email }
		           and couple_code = #{ coupleCode }
		         order
		            by test_date desc)
		 where rownum between 1 and 1
	</select>
	
	<insert id="insertTest">
		INSERT 
		  INTO F_TEST
		VALUES
		     (
		       SEQ_TEST_NO.NEXTVAL
		     , #{ testScore }
		     , SYSDATE
		     , #{ email }
		     , #{ coupleCode }
		     )
	</insert>
	
	<insert id="insertQtest">
		INSERT
		  INTO F_QTEST
		VALUES
		     (
		       SEQ_QTEST_NO.NEXTVAL
		     , #{ qtestContent }
		     , #{ testNo }
		     , #{ email }
			 , #{ coupleCode }
			 )
	</insert>
	
	<insert id="insertOptionTest">
		INSERT
		  INTO F_OPTION_TEST
		VALUES
		     (
		       SEQ_OPTION_NO.NEXTVAL
		     , #{ optionContent }
		     , #{ optionTrue }
		     , #{ qtestNo }
		     , #{ testNo }
		     , #{ email }
			 , #{ coupleCode }
		     )
	</insert>
	
	<insert id="insertAtest">
		INSERT
		  INTO F_ATEST
		VALUES
		     (
		       SEQ_ATEST_NO.NEXTVAL
		     , #{ atestContent }
		     , #{ atestTrue }
		     , #{ qtestNo }
		     , #{ testNo }
		     , #{ email }
			 , #{ coupleCode }
			 )
	</insert>
	
	<select id="selectQtestOne" resultMap="qtestResult">
		select qtest_no
		     , qtest_content
		     , test_no
		     , email
		     , couple_code
		  from (select qtest_no
		             , qtest_content
		             , test_no
		             , email
		             , couple_code
		          from f_qtest
		         where email = #{ email }
		           and couple_code = #{ coupleCode }
		         order
		            by qtest_no desc)
		 where rownum between 1 and 1
	</select>
	
	<select id="selectAtest" resultMap="atestResult">
		select atest_no
			 , atest_content
			 , atest_true
			 , qtest_no
		  from f_atest
		 where test_no = #{ testNo }
		   and email = #{ email }
		   and couple_code = #{ coupleCode }
	</select>
	
	<update id="updateAtest">
		update f_atest
		   set atest_content = #{ atestContent }
		     , atest_true = #{ atestTrue }
		 where qtest_no = #{ qtestNo }
		   and test_no = #{ testNo }
		   and email = #{ email }
		   and couple_code = #{ coupleCode }
	</update>
	
	<update id="updateTest">
		update f_test
		   set test_score = #{ testScore }
		     , test_date = sysdate
		 where test_no = #{ testNo }
		   and email = #{ email }
		   and couple_code = #{ coupleCode }
	</update>
	
	<select id="countAtest" resultType="_int">
		select count(*) as num
		  from f_atest
		 where test_no = (select test_no
		                    from (select test_no
		                            from f_test
		                           where email = #{ email }
		                             and couple_code = #{ coupleCode }
		                           order
		                              by test_no desc)
		                   where rownum between 1 and 1)
	</select>
	
	<select id="countAservey" resultType="_int">
		select count(*) as count
		  from f_aservey
		 where email = #{ email }
		   and couple_code = #{ coupleCode }
	</select>
	
	<select id="countTest" resultType="_int">
		select count(*) as count
		  from (select test_no
		          from f_test
		         where email = #{ email }
		           and couple_code = #{ coupleCode }
		         order
		            by test_date desc)
		 where rownum between 1 and 1
	</select>
	
	<insert id="insertAservey">
		INSERT
		  INTO F_ASERVEY
		VALUES
		     (
		       SEQ_ASERVEY_NO.NEXTVAL
		     , #{ aserveyContent }
		     , #{ qserveyNo }
		     , #{ email }
		     , #{ coupleCode }
		     )
	</insert>
	
	<select id="selectQtoday" resultMap="qtodayResult">
		select QTODAY_NO
			 , QTODAY_CONTENT
	      from f_qtoday
	</select>
	
	<select id="selectAtoday" resultMap="atodayResult">
		select ATODAY_NO
		     , ATODAY_CONTENT
		     , ATODAY_DATE
		     , QTODAY_DATE
		     , QTODAY_NO
		     , EMAIL
		     , COUPLE_CODE
		 from f_atoday
		where email = #{ email }
	      and couple_code = #{ coupleCode }
          and qtoday_date between to_date(#{ startDate }, 'yyyy-mm-dd')
                              and to_date(#{ endDate }, 'yyyy-mm-dd')
	</select>
	
	<select id="countAtoday" resultType="_int">
		select count(*) as count
		  from f_atoday
		 where email = #{ email }
		   and couple_code = #{ coupleCode }
	</select>
	
	<select id="checkAtodayDupl" resultMap="atodayResult">
		select qtoday_no
		  from f_atoday
		 where email = #{ email }
		   and couple_code = #{ coupleCode }
		 group
		    by qtoday_no
		having count(qtoday_no) > #{ num }
	</select>
	
	<insert id="insertAtoday">
        INSERT
		  INTO F_ATODAY
		VALUES
		     (
		       SEQ_ATODAY_NO.NEXTVAL
		     , null
		     , null
		     , sysdate
		     , #{ random }
		     , #{ email }
		     , #{ coupleCode }
		     )
	</insert>
</mapper>
